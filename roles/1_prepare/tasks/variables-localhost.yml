---
- name: Set sp_poli variable
  delegate_to: localhost
  set_fact:
    cacheable: true
    sp_poli: "{{ hostvars['localhost']['ansible_hostname'] == 'poli' }}"

- name: Validate sp_poli variable
  fail:
    msg: "sp_release_file set to 'poli' but I am not running on poli!"
  when:
    - sp_release_file == 'poli' and
      not sp_poli | bool

- name: Check cluster directory
  delegate_to: localhost
  run_once: true
  become: false
  stat:
    path: "{{ sp_custdir }}/{{ sp_cluster }}"
  register: sp_cluster_dir
  when:
    - sp_poli | bool

- name: Ensure cluster directory exist
  assert:
    that:
      - sp_cluster_dir.stat.exists
      - sp_cluster_dir.stat.isdir
    fail_msg: "{{ sp_custdir }}/{{ sp_cluster }} directory missing"
  when:
    - sp_poli | bool

- name: Get file status (sp_release_file)
  delegate_to: localhost
  run_once: true
  become: false
  stat:
    path: "{{ sp_release_file }}"
  register: sp_release_file_exists
  when:
    - sp_release_file not in [ 'web', 'poli' ]

- name: Check if file is readable
  fail:
    msg: "Unable to read sp_release_file: {{ sp_release_file }}"
  when:
    - sp_release_file not in [ 'web', 'poli' ] and
      not sp_release_file_exists.stat.readable

- name: Get storpool.conf file status on the bastion
  delegate_to: localhost
  run_once: true
  become: false
  stat:
    path: "{{ sp_config }}"
  register: sp_config_exists

- name: Check if storpool.conf file is readable on the bastion
  fail:
    msg: "Unable to read sp_config: {{ sp_config }}"
  when:
    - not sp_config_exists.stat.exists or
      not sp_config_exists.stat.readable
