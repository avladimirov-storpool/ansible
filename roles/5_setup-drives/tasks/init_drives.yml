- name: Copy drives init tools
  copy:
    src: "{{ item }}"
    dest: "{{ sp_toolsdir }}"
    mode: 0755
  with_items:
    - "init_drive.sh"
    - "perform_disktest.sh"

- name: Convert sp_drives to list
  set_fact:
    sp_drives: "{{ sp_drive_list | sort | map('regex_replace', '^(.*)', '/dev/\\1') | list }}"

- name: Test the drives
  command: "{{ sp_perform_disk_test }} {{ sp_drives | join(' ') }}"
  changed_when: false
  when:
    - not sp_vm

- name: Get node id
  command: "{{ sp_showconf }} -n SP_OURID"
  changed_when: false
  register: sp_node_id

- name: Calculate diskid prefix
  set_fact:
    sp_node_id: "{{ sp_node_id }}"
    sp_diskid_prefix: "{{ sp_node_id.stdout | int - sp_diskid_offset | int }}"
    cacheable: true

- name: Validate diskid prefix
  fail:
    msg: "Disk id prefix {{ sp_diskid_prefix }} is not in range (1..39)! Please adjust sp_diskid_offset"
  when:
    - sp_diskid_prefix|int < 1 or
      sp_diskid_prefix|int > 39

- name: Init drives
  command: >
    {{ sp_init_drive }} {{ item }} {{ sp_diskid_prefix }} 
    {{ sp_init_node if sp_new_cluster else 'noinit' }}
  changed_when: false
  with_items: "{{ sp_drives }}"

- name: Get needed number of server instances
  script: get_instances.py
  args:
    executable: "{{ sp_python_executable }}" 
  changed_when: false
  register: sp_instances

- name: Stop server instances
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  changed_when: false
  with_items: "{{ sp_instances.stdout_lines }}"

- name: Stop storpool_nvmed
  systemd:
    name: storpool_nvmed
    state: stopped
    enabled: no
  changed_when: false
  when:
    - sp_roles.nvme

- name: Expose all NVMe drives
  command: "{{ sp_expose_nvme_drives }}" 
  changed_when: false
  ignore_errors: yes
  when:
    - sp_roles.nvme

- name: Settle udev
  command: udevadm settle
  changed_when: false

- name: Assign drives to servers
  shell: |
    set -o pipefail
    {{ sp_multi_server_helper }} -i {{ sp_server_instances }} \
    | bash
  changed_when: false
  tags:
    - skip_ansible_lint
