- name: Force ansible to regather facts
  setup:
    gather_subset:
      - "!all"
      - "network"

- name: Get StorPool interfaces from storpool.conf
  shell: |
    {{ sp_showconf }} -n -e -- SP_IFACE1_CFG SP_IFACE2_CFG \
    | cut -d : -f 2,3 \
    | sed -e ':a;N;$!ba;s/\\n/:/g'
  changed_when: false
  args:
    executable: /bin/bash
  register: sp_ifaces
  tags:
    - skip_ansible_lint

- name: Validate StorPool interfaces
  fail:
    msg: "Interface {{ item }} used in storpool.conf, but does not exist"
  when: item not in ansible_interfaces
  with_items: "{{ sp_ifaces.stdout.split(':')[0] }}"

- name: Get StorPool IP addresses from storpool.conf
  shell: |
    {{ sp_showconf }} -n -e -- SP_IFACE1_CFG SP_IFACE2_CFG \
    | cut -d : -f 2,5
  changed_when: false
  args:
    executable: /bin/bash
  register: sp_conf_ips
  tags:
    - skip_ansible_lint

- name: Debug StorPool IP addresses
  debug:
    msg: "StorPool IP addresses retrieved from stoprool.conf: {{ sp_conf_ips.stdout_lines }}"
    verbosity: 2

- name: Get secondary IPs on loopback - sp_lo_ips
  set_fact:
    sp_lo_ips: "{{ ansible_facts.lo.ipv4_secondaries | map(attribute='address') | list if ansible_facts.lo.ipv4_secondaries is defined else [] }}"
    cacheable: true
 
- name: Validate StorPool IP addresses
  fail:
    msg: "IP {{ item.split(':')[1] }} missing on node!"
  when:
    - item.split(':')[1] not in sp_lo_ips
    - ( ansible_facts.values() | selectattr("device", "defined") | selectattr("device", "eq", item.split(':')[0]) | selectattr("ipv4", "defined") | list | length == 0 ) or
      ( (ansible_facts.values() | selectattr("device", "defined") | selectattr("device", "eq", item.split(':')[0]) | selectattr("ipv4", "defined") | first).ipv4.address != item.split(':')[1] )
  with_items: "{{ sp_conf_ips.stdout_lines }}"
